// Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4

package main

import (
	"testing"
)

// TestDigitalRootWithModulo_413bcae434 tests the DigitalRootWithModulo function
func TestDigitalRootWithModulo_413bcae434(t *testing.T) {
	// Test case 1: Normal scenario
	number := 12345
	expectedResult := 6
	result := DigitalRootWithModulo(number)
	if result != expectedResult {
		t.Errorf("DigitalRootWithModulo was incorrect, got: %d, want: %d.", result, expectedResult)
	}

	// Test case 2: Edge case - single digit number
	number = 9
	expectedResult = 9
	result = DigitalRootWithModulo(number)
	if result != expectedResult {
		t.Errorf("DigitalRootWithModulo was incorrect, got: %d, want: %d.", result, expectedResult)
	}

	// Test case 3: Edge case - zero
	number = 0
	expectedResult = 0
	result = DigitalRootWithModulo(number)
	if result != expectedResult {
		t.Errorf("DigitalRootWithModulo was incorrect, got: %d, want: %d.", result, expectedResult)
	}

	// Test case 4: Negative number
	number = -12345
	expectedResult = -6
	result = DigitalRootWithModulo(number)
	if result != expectedResult {
		t.Errorf("DigitalRootWithModulo was incorrect, got: %d, want: %d.", result, expectedResult)
	}
}

func DigitalRootWithModulo(number int) int {
	if (10 - number > 0) {
		return number
	}

	var sum, remainder int
	for number != 0 {
		remainder = number % 10
		sum = sum + remainder
		number = number / 10
	}

	return DigitalRootWithModulo(sum)
}
