// Test generated by RoostGPT for test roost-test using AI Type Vertex AI and AI Model code-bison





    func DigitalRootWithModulo(number int) int {

	//corner case - check if number with one digit.
	if (10 - number > 0) {
		return number
	}

	// once here - means number has more than 1 digit.
	// variables to store computation - default to 0 as integer.
	var sum, remainder int
	// perform euclidian division until quotient which
	// is the number equals 0.
	for number != 0 { 
		// get the rest and add it to the sum.
		remainder = number % 10  
		sum = sum + remainder
	  	// result of euclidean division by 10 will be used for next iteration.
	 	number = number / 10  
	}

	// recursively perform on the sum value.
	return DigitalRootWithModulo(sum)
}
    Write golang test without any explainations for above code
    

package main

import "testing"

func TestDigitalRootWithModulo(t *testing.T) {

	tests := []struct {
		name string
		n    int
		want int
	}{
		{
			name: "Single Digit",
			n:    3,
			want: 3,
		},
		{
			name: "Double digits",
			n:    98,
			want: 2,
		},
		{
			name: "Large Number",
			n:    4567,
			want: 1,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := DigitalRootWithModulo(tt.n); got!= tt.want {
				t.Errorf("DigitalRootWithModulo() = %v, want %v", got, tt.want)
			}
		})
	}
}