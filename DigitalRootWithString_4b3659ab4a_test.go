// Test generated by RoostGPT for test roost-test using AI Type Open Source AI and AI Model meta-llama/Llama-2-13b-chat

package digital_root_test

import (
	"fmt"
	"strconv"
	"testing"
)

func TestDigitalRootWithString(t *testing.T) {
	type args struct {
		number int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		{"single digit", args{1}, 1},
		{"multi digit", args{123}, 3},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got := DigitalRootWithString(tt.args.number)
			if got!= tt.want {
				t.Errorf("DigitalRootWithString(%v) = %v, want %v", tt.args.number, got, tt.want)
			}
		})
	}
}

func TestDigitalRootWithStringEdgeCases(t *testing.T) {
	type args struct {
		number int
	}
	cases := map[int]bool{
		0: true, // zero is not allowed
		1: true, // single digit is not allowed
		-1: true, // negative numbers are not allowed
	}
	for num, expected := range cases {
		t.Run(fmt.Sprintf("edge case %d", num), func(t *testing.T) {
			got := DigitalRootWithString(num)
			if!expected {
				t.Errorf("DigitalRootWithString(%v) = %v, want error", num, got)
			}
		})
	}
}
