// Test generated by RoostGPT for test golang-test-2 using AI Type Open AI and AI Model gpt-4

package main

import (
	"strconv"
	"testing"
)

func digitalRoot(number int) int {

	// convert number from integer to string.
	s := strconv.Itoa(number)

	// corner case - if number of one digit.
	if len(s) == 1 {
		return number
	}
	
	// once here means - number has more than 1 digit inside.
	// variables to store conversion and to avoid redeclaring
	// new one for each iteration. 
	var sum, digit int
	
	// loop over the string and add each character to the sum.
	for _, c := range s {
		// c is a rune type so convert into string type.
		// then convert from string to integer.
		digit, _ = strconv.Atoi(string(c))
		// add the digit to the sum.
		sum = sum + digit
	}

	// recursively perform on the sum value.
	return digitalRoot(sum)
} 

func TestDigitalRoot_4b3659ab4a(t *testing.T) {
    // Test case 1: Normal scenario
    result := digitalRoot(12345)
    if result != 6 {
        t.Error("Test case 1 failed: expected 6, got ", result)
    }

    // Test case 2: Single digit number
    result = digitalRoot(7)
    if result != 7 {
        t.Error("Test case 2 failed: expected 7, got ", result)
    }

    // Test case 3: Large number
    result = digitalRoot(999999999)
    if result != 9 {
        t.Error("Test case 3 failed: expected 9, got ", result)
    }

    // Test case 4: Zero
    result = digitalRoot(0)
    if result != 0 {
        t.Error("Test case 4 failed: expected 0, got ", result)
    }
}
